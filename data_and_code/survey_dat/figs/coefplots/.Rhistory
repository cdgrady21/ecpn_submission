df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[,paste0(var,"_end")] <- df[,paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
do(nsims)*newPow.fn()
nsims=100
do(nsims)*newPow.fn()
do(nsims)*newPow.fn(var=outcome_list_qip[1]; tau=0)
outcome_list_qip[1]
do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0)
head(check)
mean(check<0.05)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.5)
mean(check<0.05)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=1)
mean(check<0.05)
tau=1
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[,paste0(var,"_end")] <- df[,paste0(var,"_end")]+tau
df[,paste0(var,"_end")]
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state, data=df)
lm1
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
nsims=100
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=1)
mean(check<0.05)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.5)
mean(check<0.05)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.2)
mean(check<0.05)
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state, data=df)
lm1
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0)
mean(check<0.05)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0)
mean(check<0.05)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0)
mean(check<0.05)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.1)
mean(check<0.05)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.2)
mean(check<0.05)
outcome_list_qip[1]
nrow(ag.df)
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = comm, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
nsims=100
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.2)
mean(check<0.05)
ag.df$psu
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.2)
mean(check<0.05)
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+state,
clusters = psu, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.2)
mean(check<0.05)
df[,paste0(var,"_end")]
var=outcome_list_qip[1]; tau=0
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- df[,paste0(var,"_end")]/sd(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
lm1
var=outcome_list_qip[1]; tau=0.2
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- df[,paste0(var,"_end")]/sd(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- df[,paste0(var,"_end")]/sd(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
lm1
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- df[,paste0(var,"_end")]/sd(df[,paste0(var,"_end")])
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
df[, paste0(var,"_end")]
df[,paste0(var,"_end")]/sd(df[,paste0(var,"_end")])
(df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
(df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
scale(df[,paste0(var,"_end")])
var=outcome_list_qip[1]; tau=0.2
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[,y0.vars] <- scale(df[,y0.vars])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
lm1
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
nsims=100
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.0)
mean(check<0.05)
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.0)
mean(check<0.05)
nsims=1000
check <- do(nsims)*newPow.fn(var=outcome_list_qip[1], tau=0.0)
mean(check<0.05)
bigPow.fn <-function(nsims)
{
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
check <- do(nsims)*newPow.fn(var=var, tau=tau)
pval <- mean(check<0.05)
return(pval)
}
bigPow.fn <-function(nsims, var, tau)
{
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
check <- do(nsims)*newPow.fn(var=var, tau=tau)
pval <- mean(check<0.05)
return(pval)
}
bigPow.fn(nsims=100, tau=0)
bigPow.fn <-function(nsims, var=outcome_list_qip[1], tau)
{
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
check <- do(nsims)*newPow.fn(var=var, tau=tau)
pval <- mean(check<0.05)
return(pval)
}
bigPow.fn(nsims=100, tau=0)
bigPow.fn(nsims=100, tau=0)
bigPow.fn(nsims=100, tau=0.2)
bigPow.fn(nsims=100, tau=0.5)
bigPow.fn(nsims=100, tau=0.8)
bigPow.fn(nsims=100, tau=0.7)
tau
var
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
lm1
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
lm1
bigPow.fn <-function(nsims, var=outcome_list_qip[1], tau)
{
newPow.fn <- function(var, tau)
{
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
want <- tidy(lm1)[2,5]
return(want)
}
check <- do(nsims)*newPow.fn(var=var, tau=tau)
pval <- mean(check<0.05)
return(pval)
}
tau=0.7
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
lm1
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
lm1
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
lm1
df <- ag.df %>% dplyr::group_by(state) %>%
mutate(newtr = sample(treatment, replace=F)) %>%
as.data.frame(.)
# make endline outcome with TR effect tau
df[, paste0(var,"_end")] <- (df[,paste0(var,"_end")]-mean(df[,paste0(var,"_end")]))/sd(df[,paste0(var,"_end")])
#scale(df[,paste0(var,"_end")])
df[df$newtr %in% 1, paste0(var,"_end")] <- df[df$newtr %in% 1, paste0(var,"_end")]+tau
lm1 <- lm_robust(df[,paste0(var,"_end")]~df[,'newtr']+df[,paste0(var,"_base")]+state,
clusters = psu, data=df)
lm1
bigPow.fn(nsims=100, tau=0.7)
possibleTaus <- seq(0,1,0.1)
set.seed(3455)
system.time(
possibleTaus$pow <- apply(possibleTaus,1,function(x){ message(paste(possibleTaus,collapse=" ")); bigPowFun(nsims=100,tau=x[[1]]) })
)
possibleTaus
possibleTaus <- as.data.frame(possibleTaus)
possibleTaus
possibleTaus <- seq(0,1,0.1)
possibleTaus <- as.data.frame(possibleTaus)
bigPow.fn(nsims=100, tau=possibleTaus[i,1])
possibleTaus[i, "pow"] <- bigPow.fn(nsims=100, tau=possibleTaus[i,1])
possibleTaus <- seq(0,1,0.1)
possibleTaus <- as.data.frame(possibleTaus)
for(i in 1:length(possibleTaus))
{
possibleTaus[i, "pow"] <- bigPow.fn(nsims=100, tau=possibleTaus[i,1])
}
possibleTaus
length(possibleTaus)
nrow(possibleTaus)
possibleTaus <- seq(0,1,0.1)
possibleTaus <- as.data.frame(possibleTaus)
for(i in 1:nrow(possibleTaus))
{
possibleTaus[i, "pow"] <- bigPow.fn(nsims=100, tau=possibleTaus[i,1])
}
possibleTaus
possibleTaus <- seq(0,1,0.1)
possibleTaus <- as.data.frame(possibleTaus)
for(i in 1:nrow(possibleTaus))
{
possibleTaus[i, "pow"] <- bigPow.fn(nsims=500, tau=possibleTaus[i,1])
}
possibleTaus
outcome_list_qip[1]
possibleTaus <- seq(0,1,0.1)
possibleTaus <- as.data.frame(possibleTaus)
system.time(
for(i in 1:nrow(possibleTaus))
{
possibleTaus[i, "pow"] <- bigPow.fn(nsims=1000, tau=possibleTaus[i,1])
}
)
possibleTaus
save(possibleTaus, file="new_power.Rdata")
possibleTaus
possibleTaus <- seq(0,1,0.1)
possibleTaus <- as.data.frame(possibleTaus)
system.time(
for(i in 1:nrow(possibleTaus))
{
possibleTaus[i, "pow"] <- bigPow.fn(nsims=1000, tau=possibleTaus[i,1])
}
)
possibleTaus
save(possibleTaus, file="new_power.Rdata")
setwd("C:/Users/chris/Repos/ecpn_submission/data_and_code/survey_dat/figs/coefplots")
setwd("C:/Users/chris/Repos/ecpn_submission/data_and_code/review")
save(possibleTaus, file="new_power.Rdata")
setwd("C:/Users/chris/Repos/ecpn_submission/data_and_code/survey_dat/figs/coefplots")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
load('ag.coefs.Rdata')
load('ind.coefs.Rdata')
#load('ind2.coefs.Rdata')
#load('ag.coefs_orig.Rdata')
#load('ind.coefs_orig.Rdata')
#load('ind2.coefs_orig.Rdata')
## add obs data to coefs
#load("../../../obsDat/figs/marketCoefs1.rda") # no FEs, should be unbiased
#load("../../../obsDat/figs/eventCoefs1.rda") # no FEs
load("../../../obs_dat/figs/obsDat_fig_dat.rda")
outcome <- ag.coefs
outcome <- outcome[grepl("Trust|contact|in_cw|end_exp|rMean|pgp", outcome$var),]
outcome <- outcome[,c("var", "size", "ll_size", "ul_size")]
names(outcome) <- c("var", "coef_sd", "ll_sd", "ul_sd")
outcome$var <- c("Self-reported Attitudes", "Self-reported Contact",
"Perceptions of Security",
"Public Goods Amount", "Public Goods Donation",
"Contact Willingness", "Endorsement Experiment")
outcome$outcome_type <- c("atts", "con", "in","pgg", "pgg", "con", "atts")
outcome2$outcome_type <- "con"
outcome2$Data <- "Behavior"
outcome2$var <- c("Pastoralists in Market",
"Farmers in Market",
"Outgroup Event Attendance")
outcome2$df <- NULL
outcome$Data <- "Survey"
outcome$Data[outcome$outcome_type %in% "pgg"] <- "Behavior"
svyObs_outcomes <- rbind(outcome, outcome2)
svyObs_outcomes$hypothesis <- c("Attitudes", "Contact", "Security",
"Cooperation", "Cooperation", "Contact",
"Attitudes",
"Contact", "Contact", "Contact")
res <- svyObs_outcomes
res$hypothesisF <-
factor(res$hypothesis,
levels = c("Contact", "Security", "Attitudes", "Cooperation"))
res$varF <-
factor(res$var,
levels = c("Self-reported Contact", "Contact Willingness",
"Pastoralists in Market",
"Farmers in Market", "Outgroup Event Attendance",
"Self-reported Attitudes", "Perceptions of Security",
"Public Goods Amount", "Public Goods Donation", "Endorsement Experiment"))
ggplot(data = res, aes(x = varF, y = coef_sd, color = Data)) +
facet_grid(vars(hypothesisF), scales="free", space = "free")+
geom_point()+
geom_errorbar(aes(ymin = ll_sd, ymax = ul_sd, color = Data), width = 0) +
geom_hline(yintercept = 0, linetype = 2, color = "gray")+
labs(y = "Effect Size & 95% CI", x = NULL)+
theme_bw() +
#theme(axis.text = element_text(size = 12))+
coord_flip()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggsave("coef_agg.png", height=6, width = 6)
ggplot(data = res, aes(x = varF, y = coef_sd, color = Data)) +
facet_grid(vars(hypothesisF), scales="free", space = "free")+
geom_point()+
geom_errorbar(aes(ymin = ll_sd, ymax = ul_sd, color = Data), width = 0) +
geom_hline(yintercept = 0, linetype = 2, color = "gray")+
labs(y = "Effect Size & 95% CI", x = NULL)+
theme_bw() +
#theme(axis.text = element_text(size = 12))+
coord_flip()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(breaks = c(-1, -0.5, 0, 0.5, 1))
ggplot(data = res, aes(x = varF, y = coef_sd, color = Data)) +
facet_grid(vars(hypothesisF), scales="free", space = "free")+
geom_point()+
geom_errorbar(aes(ymin = ll_sd, ymax = ul_sd, color = Data), width = 0) +
geom_hline(yintercept = 0, linetype = 2, color = "gray")+
labs(y = "Effect Size & 95% CI", x = NULL)+
theme_bw() +
#theme(axis.text = element_text(size = 12))+
coord_flip()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_y_continuous(breaks = c(-1, -0.5, 0, 0.5, 1))
ggplot(data = res, aes(x = varF, y = coef_sd, color = Data)) +
facet_grid(vars(hypothesisF), scales="free", space = "free")+
geom_point()+
geom_errorbar(aes(ymin = ll_sd, ymax = ul_sd, color = Data), width = 0) +
geom_hline(yintercept = 0, linetype = 2, color = "gray")+
labs(y = "Effect Size & 95% CI", x = NULL)+
theme_bw() +
#theme(axis.text = element_text(size = 12))+
coord_flip()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data = res, aes(x = varF, y = coef_sd, color = Data)) +
facet_grid(vars(hypothesisF), scales="free", space = "free")+
geom_point()+
geom_errorbar(aes(ymin = ll_sd, ymax = ul_sd, color = Data), width = 0) +
geom_hline(yintercept = 0, linetype = 2, color = "gray")+
labs(y = "Effect Size & 95% CI", x = NULL)+
theme_bw() +
#theme(axis.text = element_text(size = 12))+
coord_flip()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_y_continuous(breaks = c(-1, -0.5, 0, 0.5, 1))
ggsave("coef_agg.png", height=6, width = 6)
res
