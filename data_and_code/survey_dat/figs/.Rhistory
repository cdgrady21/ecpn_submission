popmean*prob + (1 - popmean)*(1 - prob)
popmean=1
prob=0.5
popmean*prob + (1 - popmean)*(1 - prob)
popmean=0.5
prob=0.5
popmean*prob + (1 - popmean)*(1 - prob)
popmean=0.1
prob=0.5
popmean*prob + (1 - popmean)*(1 - prob)
popmean=0.5
prob=0.25
popmean*prob + (1 - popmean)*(1 - prob)
popmean=0.7
prob=0.25
popmean*prob + (1 - popmean)*(1 - prob)
popmean=0.7
prob=0.25
popmean*prob + (1 - popmean)*(1 - prob)
(1 - popmean)*prob + popmean*(1 - prob)
popmean=0.7
prob=0.25
popmean*prob + (1 - popmean)*(1 - prob)
(1 - popmean)*prob + popmean*(1 - prob)
popmean*prob + (1 - popmean)*(1 - prob)
(1 - popmean)*prob + popmean*(1 - prob)
prob=0.1
n=1000
n_1=200
popmean <- (prob-1)/(2*prob-1)+(n_1/(2*prob-1)*n)
(popmean <- (prob-1)/(2*prob-1)+(n_1/(2*prob-1)*n))
prob=0.1
n=1000
n_1=200
(popmean <- (prob-1)/(2*prob-1)+(n_1/(2*prob-1)*n))
(popmean <- (prob-1)/(2*prob-1)+(n_1/((2*prob-1)*n)))
prob=0.2
n=1000
n_1=200
(popmean <- (prob-1)/(2*prob-1)+(n_1/((2*prob-1)*n)))
prob=0.4
n=1000
n_1=200
(popmean <- (prob-1)/(2*prob-1)+(n_1/((2*prob-1)*n)))
prob=0.4
n=1000
n_1=200
(popmean <- ((prob-1)/(2*prob-1))+(n_1/((2*prob-1)*n)))
prob=0.4
n=1000
n_1=1
(popmean <- ((prob-1)/(2*prob-1))+(n_1/((2*prob-1)*n)))
prob=0.4
n=1000
n_1=100
(popmean <- ((prob-1)/(2*prob-1))+(n_1/((2*prob-1)*n)))
(popmean <- ((prob-1)/((2*prob)-1))+(n_1/(((2*prob)-1)*n)))
prob=0.3
n=1000
n_1=100
(popmean <- ((prob-1)/((2*prob)-1))+(n_1/(((2*prob)-1)*n)))
prob=0.3
n=1000
n_1=400
(popmean <- ((prob-1)/((2*prob)-1))+(n_1/(((2*prob)-1)*n)))
prob=0.2
n=1000
n_1=400
(popmean <- ((prob-1)/((2*prob)-1))+(n_1/(((2*prob)-1)*n)))
prob=0.2
n=1000
n_1=200
(popmean <- ((prob-1)/((2*prob)-1))+(n_1/(((2*prob)-1)*n)))
prob=0.3
n=1000
n_1=200
(popmean <- ((prob-1)/((2*prob)-1))+(n_1/(((2*prob)-1)*n)))
prob=0.3
n=1000
n_1=200
(popmean <- ((prob-1)/((2*prob)-1))+(n_1/(((2*prob)-1)*n)))
prob=0.3
prob=0.3
prob=0.3
prob=0.3
n=1000
n_1=200
(popmean <- ((prob-1)/((2*prob)-1))+(n_1/(((2*prob)-1)*n)))
prob=0.4
n=1000
n_1=200
(popmean <- ((prob-1)/((2*prob)-1))+(n_1/(((2*prob)-1)*n)))
sen <- c(1,0,0,0,0,0,0,0,0,0)
non <- c(1,1,0,0,0,0,0,0,0,0)
dat <- as.data.frame(cbind(sen,non))
dat$add <- dat$sen+dat$non
dat$answer <- ifelse(dat$add == 0 | dat$add == 2, 0,1)
table(dat$answer)
nonsens <- 0.2
one <- 0.2
bothnone <- 1-one
nonsens <- 0.2
one <- 0.2
bothnone <- 1-one
nonsens <- 0.2
one <- 0.2
bothnone <- 1-one
truemean <- (bothnone+nonsens-1)/(2*nonsens-1)
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
nonsens <- 0.2
one <- 0.4
bothnone <- 1-one
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
nonsens <- 0.2
one <- 0.2
bothnone <- 1-one
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
nonsens <- 0.2
one <- 0.4
bothnone <- 1-one
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
nonsens <- 0.2
one <- 0.8
bothnone <- 1-one
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
nonsens <- 0.2
one <- 0.75
bothnone <- 1-one
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
nonsens <- 0.2
one <- 0.75
bothnone <- 1-one
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
nonsens <- 0.2
one <- 0.66
bothnone <- 1-one
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
bothnone*0.5 + (one-nonsens)
bothnone*nonsens + (one-nonsens)
bothnone*nonsens*one + (one-nonsens)
one-nonsens
racist <- c(1,1,1,1,1,1,1,1,1,1,
0,0,0,0,0,0,0,0,0,0)
jan <- c(1,1,1,1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0)
library(mosaic)
dat <- as.data.frame(shuffle(racist), shuffle(jan))
dat <- as.data.frame(racist, jan)
dat
dat <- as.data.frame(cbind(shuffle(racist), shuffle(jan))
)
dat
racist <- c(rep(1,500),
rep(0,500))
racist
jan <- c(rep(1,200),
rep(0,800))
racist <- c(rep(1,500),
rep(0,500))
jan <- c(rep(1,200),
rep(0,800))
dat <- as.data.frame(cbind(shuffle(racist), shuffle(jan)))
head(dat)
table(dat$V2)
racist <- dat[dat$V1 %in% 1,]
table(racist$V2)
prop.table(table(racist$V2))
prop.table(table(dat$V2))
racist <- c(rep(1,500),
rep(0,500))
jan <- c(rep(1,200),
rep(0,800))
dat <- as.data.frame(cbind(shuffle(racist), shuffle(jan)))
prop.table(table(dat$V2))
racist <- dat[dat$V1 %in% 1,]
prop.table(table(racist$V2))
dat$add <- dat$V1+dat$V2
dat$one <- dat$add == 1
dat$bothnone <- 1-dat$one
prop.table(table(dat$one))
table(dat$one)
head(dat)
dat$one <- dat$add %in% 1
racist <- c(rep(1,500),
rep(0,500))
jan <- c(rep(1,200),
rep(0,800))
dat <- as.data.frame(cbind(shuffle(racist), shuffle(jan)))
dat$add <- dat$V1+dat$V2
dat$one <- dat$add %in% 1
dat$bothnone <- 1-dat$one
prop.table(table(dat$one))
dat$one <- ifelse(dat$add %in% 1,1,0)
dat$bothnone <- 1-dat$one
prop.table(table(dat$one))
prop.table(table(dat$one))
ones <- dat[dat$one %in% 1,]
prop.table(table(ones$V2))
prop.table(table(dat$one))
racist <- c(rep(1,500),
rep(0,500))
jan <- c(rep(1,200),
rep(0,800))
dat <- as.data.frame(cbind(shuffle(racist), shuffle(jan)))
dat$add <- dat$V1+dat$V2
dat$one <- ifelse(dat$add %in% 1,1,0)
dat$bothnone <- 1-dat$one
prop.table(table(dat$V2))
ones <- dat[dat$one %in% 1,]
prop.table(table(ones$V2))
racist <- c(rep(1,500),
rep(0,500))
jan <- c(rep(1,200),
rep(0,800))
dat <- as.data.frame(cbind(shuffle(racist), shuffle(jan)))
dat$add <- dat$V1+dat$V2
dat$one <- ifelse(dat$add %in% 1,1,0)
dat$bothnone <- 1-dat$one
prop.table(table(dat$V2))
ones <- dat[dat$one %in% 1,]
prop.table(table(ones$V2))
prop.table(table(dat$V2))
ones <- dat[dat$one %in% 1,]
prop.table(table(ones$V2))
table(dat$one)
534*.2
534-`07`
534-107
427/534
nonsens <- 0.2
one <- 0.5
bothnone <- 1-one
one-nonsens
nonsens <- 0.2
one <- 0.5
bothnone <- 1-one
bothnone*0.5 + (one-nonsens)
nonsens <- 0.2
one <- 0.5
bothnone <- 1-one
bothnone*0.5 + (one-nonsens)
nonsens <- 0.2
one <- 0.5
bothnone <- 1-one
bothnone*0.5 + (one-nonsens)
one-nonsens
racistOnes <- 0.5*.2
racistOnes
racistOnes <- 0.5*(1-nonsens)
(racistOnes <- 0.5*(1-nonsens))
(racistOnes <- one*(1-nonsens))
(racistTwos <- bothnone*(1-nonsens)
)
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
nonsens <- 0.2
one <- 0.5
bothnone <- 1-one
(racistOnes <- one*(1-nonsens))
(racistTwos <- bothnone*(1-nonsens))
(truemean <- (bothnone+nonsens-1)/(2*nonsens-1))
bothnone
nonsens
bothnone+nonsens-1
#
n=1000
n2=700
p2=.5
p1=.5
((n1/n)-p2)/p1
#
n=1000
n1=700
p2=.5
p1=.5
((n1/n)-p2)/p1
n1/n
(n1/n)-p2)
(n1/n)-p2
coin <- c(rep(1,500), rep(0,500))
sens <- c(rep(1,400), rep(0,600))
dat <- as.data.frame(cbind(coin,sens))
dat$reveal <- ifelse(coin %in% 1, 1, dat$sens)
table(dat$reveal)
table(dat$reveal, dat$coin)
coin <- c(rep(1,500), rep(0,500))
sens <- c(rep(1,400), rep(0,600))
dat <- as.data.frame(cbind(shuffle(coin),shuffle(sens)))
dat$reveal <- ifelse(coin %in% 1, 1, dat$sens)
table(dat$reveal)
coin <- c(rep(1,500), rep(0,500))
sens <- c(rep(1,400), rep(0,600))
dat <- as.data.frame(cbind(shuffle(coin),shuffle(sens)))
dat$reveal <- ifelse(coin %in% 1, 1, dat$sens)
head(dat)
coin <- c(rep(1,500), rep(0,500))
sens <- c(rep(1,400), rep(0,600))
dat <- as.data.frame(cbind(sample(coin),sample(sens)))
dat$reveal <- ifelse(coin %in% 1, 1, dat$sens)
head(dat)
dat <- as.data.frame(cbind(coin,sens))
head(dat)
dat$coin <- sample(dat$coin)
head(d)
head(dat)
dat$coin <- sample(dat$coin); dat$sens <- sample(dat$sens)
dat$reveal <- ifelse(coin %in% 1, 1, dat$sens)
table(dat$reveal)
.5*7
.5*.5*.5
.5^7
.1/2
.1/.5
choose(100,4)
install.packages('gtools')
library("gtools")
?permutations
permutations(100,4)
nrow(permutations(100,4))
nrow(permutations(40,4))
nrow(permutations(45,4))
1000000/500
3/15
5/15
1.4*725
750/725
150*725
8*75
6*5
2135/3
4000/700
install.packages("pandoc-crossref")
69+31
1.02^30
1.03^30
648*0.5
3+3
2322/2900
37/98
15+12+12+15+15
2019 - 1965
16000/700
16400/700
.42*700
3000*12
10*1600
(10*1600)/(5*6)
16000/(5*6*8)
3999.86-2135.81
2000-1864.05
134*775
ppl <- c(alice, basers, raj)
ppl <- c("alice", "basers", "raj")
sample(ppl)
sample(ppl)
sample(ppl)
set.seed(20200408)
set.seed(20200408)
sample(ppl)
sample(ppl)
sample(ppl)
set.seed(20200408)
sample(ppl)
set.seed(20200408)
sample(ppl)
1864.05+6734.8
4000/30
80000/180
480/60
150*.01
220*5.45
?rep
rep(1,4)
x <- c(rep(1,4),rep(0,29))
sample(x,5)
test <- do(1000)*sample(x,5)
test <- mosaic::do(1000)*sample(x,5)
test[1:5]
test$yes <- rowsum(test[,])
test$yes <- rowSums(test[,])
head(test)
tail(test)
test$yes <- ifelse(test$yes>0,1,0)
mean(test$yes)
test <- mosaic::do(1000)*sample(x,10)
test$yes <- rowSums(test[,])
test$yes <- ifelse(test$yes>0,1,0)
mean(test$yes)
bag <- (1,0,0,-1,-1,-2,-2,-3,-3,-4,-5,-2,-2,-3,-5)
bag <- c(1,0,0,-1,-1,-2,-2,-3,-3,-4,-5,-2,-2,-3,-5)
mean(bag)
twos <- do(10000)*sample(bag,2)
library(mosaic)
?sample
twos <- do(10000)*sample(bag,2)
head(twos)
bag <- c(1,1,0,0,-1,-1,-1,-2,-2,-3,-3,-4,-5,-2,-2,-3,-5)
mean(bag)
twos <- do(10000)*sample(bag,2)
twos$r <- max(twos[,1:2])
head(twos)
twos$r <- apply(twos[,1:2],1,max)
head(twos)
mean(twos$r)
bag <- c(1,1,0,0,-1,-1,-1,-2,-2,-3,-3,-4,-5,0,0,-3,-5)
mean(bag)
twos <- do(10000)*sample(bag,2)
twos$r <- apply(twos[,1:2],1,max)
mean(twos$r)
4*8
4*7
1/9
1/8
1/44
1/150
30*8
200/8
2000/30
25*8*5
15*8*5
48/3
550000/75000000
550000/30000000
150/2500
2650/2500
3359.51*26
3500*2
7000*12
240/8
install.packages(c("dplyr", "estimatr", "googlesheets4", "knitr", "mosaic", "qdap", "sentimentr", "tm"))
library(mosaic)
install.packages(stringi)
install.packages("stringi")
1500/122
122*6
24/70
143/.34
400/7
450/7
230*7
1610-900
780+900
1680/7
130*5
650/60
70*8
rm(list=ls())
library(readtext)
library(quanteda)
library(stringi)
install.packages("quanteda")
install.packages("quanteda")
library(readtext)
library(quanteda)
install.packages("Rcpp")
install.packages("Rcpp")
library(quanteda)
library(stringi)
88/12
42/8
3000*52
.05*3000
.5*(1-.5)/1000
.9*(1-.9)/1000
99/14
600*2
600*2
2400+300
2300-600
1700/2
a <- c("chris", "nuole", "levi")
b <- c("wei", "wu", "shu")
rbind(a,sampl(b))
rbind(a,sample(b))
set.seed(47623)
rbind(a,sample(b))
set.seed(47623)
rbind(a,sample(b))
set.seed(47622)
rbind(a,sample(b))
set.seed(47623)
rbind(a,sample(b))
50*2*6
500/600
161/7
113/4
500/8
a <- c("chris", "nuole", "levi")
b <- c("wei", "wu", "shu")
a <- c("chris", "nuole", "levi")
b <- c("wei", "wu", "shu")
set.seed(0801264)
rbind(a,sample(b))
a <- c("chris", "nuole", "levi")
b <- c("wei", "wu", "shu")
set.seed(782022)
rbind(a,sample(b))
a <- c("chris", "nuole", "levi")
b <- c("wei", "wu", "shu")
set.seed(8202022)
rbind(a,sample(b))
set.seed(20082022)
rbind(a,sample(b))
a <- c("chris", "nuole", "levi")
b <- c("wei", "wu", "shu")
set.seed(20082022)
rbind(a,sample(b))
setwd("C:/Users/chris/Repos/ecpn_submission/data_and_code/survey_dat/figs")
setwd("C:/Users/chris/Repos/ecpn_submission/data_and_code/survey_dat/figs")
rm(list=ls())
library(plyr)
library(dplyr)
library(tidyr)
